[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://v27jtucnjeeq"]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_xww2v"]
parameter_name = "MinLineThikness"
default_value_enabled = true
default_value = Vector2(0, 300)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_0naas"]
parameter_name = "MaxThikness"

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_jsuo0"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_2s2er"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_3kl5n"]
parameter_name = "XShiftAmplitude"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_50rlq"]
function = 19

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_xuk8d"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2qai6"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_el8f0"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_erqc5"]
input_name = "vertex_id"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_1cljs"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 400, 0), 5, Vector3(0, 400, 0)]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_lf56d"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 3

[sub_resource type="VisualShaderNodeIntOp" id="VisualShaderNodeIntOp_8ac07"]
default_input_values = [0, 0, 1, 2]
operator = 3

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float XShiftAmplitude;
uniform vec2 MinLineThikness = vec2(0.000000, 300.000000);
uniform float MaxThikness;




// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}


void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;


// Input:5
	int n_out5p0 = VERTEX_ID;


// FloatOp:7
	float n_in7p1 = 2.00000;
	float n_out7p0 = float(n_out5p0) / n_in7p1;


// IntOp:8
	int n_in8p1 = 2;
	int n_out8p0 = n_out5p0 / n_in8p1;


// FloatParameter:17
	float n_out17p0 = XShiftAmplitude;


// FloatFunc:18
	float n_out18p0 = -(n_out17p0);


// RandomRange:19
	vec3 n_in19p0 = vec3(1.00000, 1.00000, 1.00000);
	float n_out19p0 = mix(n_out18p0, n_out17p0, hash_noise_range(n_in19p0).x);


// Vector2Parameter:10
	vec2 n_out10p0 = MinLineThikness;


// FloatParameter:12
	float n_out12p0 = MaxThikness;


// RandomRange:15
	vec3 n_in15p0 = vec3(1.00000, 1.00000, 1.00000);
	float n_out15p0 = mix(n_out10p0.x, n_out12p0, hash_noise_range(n_in15p0).x);


// VectorCompose:16
	vec2 n_out16p0 = vec2(n_out19p0, n_out15p0);


	vec3 n_out6p0;
// If:6
	float n_in6p2 = 0.00001;
	vec3 n_in6p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out7p0 - float(n_out8p0)) < n_in6p2)
	{
		n_out6p0 = n_in6p3;
	}
	else if(n_out7p0 < float(n_out8p0))
	{
		n_out6p0 = vec3(n_out16p0, 0.0);
	}
	else
	{
		n_out6p0 = vec3(n_out16p0, 0.0);
	}


// VectorOp:4
	vec2 n_out4p0 = n_out2p0 + vec2(n_out6p0.xy);


// Output:0
	VERTEX = n_out4p0;


}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(1260, 200)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_2qai6")
nodes/vertex/2/position = Vector2(400, 100)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_el8f0")
nodes/vertex/4/position = Vector2(1080, 340)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_erqc5")
nodes/vertex/5/position = Vector2(-40, 380)
nodes/vertex/6/node = SubResource("VisualShaderNodeIf_1cljs")
nodes/vertex/6/position = Vector2(880, 500)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatOp_lf56d")
nodes/vertex/7/position = Vector2(280, 320)
nodes/vertex/8/node = SubResource("VisualShaderNodeIntOp_8ac07")
nodes/vertex/8/position = Vector2(278.565, 472.28)
nodes/vertex/10/node = SubResource("VisualShaderNodeVec2Parameter_xww2v")
nodes/vertex/10/position = Vector2(120, 680)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatParameter_0naas")
nodes/vertex/12/position = Vector2(120, 1100)
nodes/vertex/15/node = SubResource("VisualShaderNodeRandomRange_jsuo0")
nodes/vertex/15/position = Vector2(400, 920)
nodes/vertex/16/node = SubResource("VisualShaderNodeVectorCompose_2s2er")
nodes/vertex/16/position = Vector2(620, 760)
nodes/vertex/17/node = SubResource("VisualShaderNodeFloatParameter_3kl5n")
nodes/vertex/17/position = Vector2(120, 1280)
nodes/vertex/18/node = SubResource("VisualShaderNodeFloatFunc_50rlq")
nodes/vertex/18/position = Vector2(380, 1100)
nodes/vertex/19/node = SubResource("VisualShaderNodeRandomRange_xuk8d")
nodes/vertex/19/position = Vector2(560, 1120)
nodes/vertex/connections = PackedInt32Array(4, 0, 0, 0, 2, 0, 4, 0, 5, 0, 7, 0, 5, 0, 8, 0, 7, 0, 6, 0, 8, 0, 6, 1, 6, 0, 4, 1, 12, 0, 15, 2, 10, 0, 15, 1, 15, 0, 16, 1, 17, 0, 18, 0, 18, 0, 19, 1, 17, 0, 19, 2, 19, 0, 16, 0, 16, 0, 6, 4, 16, 0, 6, 5)
nodes/fragment/0/position = Vector2(1260, 80)
